#pragma once

class CMenuManager
{
public:
	void MessageScreen(char* message, bool, bool);
	/*
	* AdditionalOptionInput(unsigned char*, unsigned char*)
	* CMenuManager()
	* CentreMousePointer()
	* ChangeLanguage(signed char)
	* CheckCodesForControls(int)
	* CheckFrontEndDownInput()
	* CheckFrontEndLeftInput()
	* CheckFrontEndRightInput()
	* CheckFrontEndUpInput()
	* CheckHover(int, int, int, int)
	* CheckMissionPackValidMenu()
	* CheckRedefineControlInput()
	* CheckSliderMovement(signed char)
	* DisplayHelperText(char*)
	* DisplaySlider(float, float, float, float, float, float, int)
	* DoSettingsBeforeStartingAGame()
	* DrawBackground()
	* DrawContollerScreenExtraText(int)
	* DrawControllerBound(unsigned short, bool)
	* DrawControllerSetupScreen()
	* DrawFrontEnd()
	* DrawQuitGameScreen()
	* DrawStandardMenus(unsigned char)
	* DrawWindow(CRect const&, char*, unsigned char, CRGBA, unsigned char, unsigned char)
	* DrawWindowedText(float, float, float, char*, char*, unsigned char)
	* GetNumberOfMenuOptions()
	* HasLanguageChanged()
	* Initialise()
	* InitialiseChangedLanguageSettings(bool)
	* JumpToGenericMessageScreen(signed char, char const*, char const*)
	* LoadAllTextures()
	* LoadSettings()
	* 
	* PrintBrief()
	* PrintMap()
	* PrintRadioStationList()
	* PrintStats()
	* Process()
	* ProcessFileActions()
	* ProcessMenuOptions(signed char, unsigned char*, unsigned char)
	* ProcessMissionPackNewGame()
	* ProcessPCMenuOptions(signed char, unsigned char)
	* ProcessStreaming(unsigned char)
	* ProcessUserInput(unsigned char, unsigned char, unsigned char, unsigned char, signed char)
	* RedefineScreenUserInput(unsigned char*, unsigned char*)
	* ResetHelperText()
	* SaveLoadFileError_SetUpErrorScreen()
	* SaveSettings()
	* SaveStatsToFile()
	* ScrollRadioStations(signed char)
	* SetDefaultPreferences(signed char)
	* SetFrontEndRenderStates()
	* SetHelperText(int)
	* SmallMessageScreen(char const*)
	* StretchX(float)
	* StretchY(float)
	* SwapTexturesRound(unsigned char)
	* SwitchMenuOnAndOff()
	* SwitchToNewScreen(signed char)
	* UnloadTextures()
	* UserInput()
	* ~CMenuManager()
	*/
private:
};